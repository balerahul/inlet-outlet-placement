# Offspring Mode Run Configuration
# ==================================
# Generate children from multiple parents via crossover + mutation.
#
# This mode is useful for:
# - Combining features from multiple good layouts
# - Multi-generation evolutionary optimization
# - Exploring the solution space through recombination
#
# Usage:
#   python3 ga_cli.py examples/offspring_run.yaml

mode: "offspring"

# Input: Multiple parents (use either manifest or directory)
input:
  # OPTION 1: Parent manifest with scores/weights (recommended)
  # Allows weighted parent selection based on external fitness
  parents_manifest: "parents.csv"

  # OPTION 2: All CSVs from a directory (uncomment to use)
  # All CSVs will be loaded with equal weight
  # parents_dir: "ga_output/variants"

  # NOTE: Specify EITHER parents_manifest OR parents_dir, not both

# Output configuration
output:
  output_root: "ga_output/generation_001"
  # If this directory exists, set overwrite to true
  overwrite: true

# Generation parameters
generation:
  # Number of children to generate via crossover + mutation
  num_children: 20

  # Number of fresh random layouts to generate for diversity (optional)
  # These are created using the existing PlacementEngine
  # Set to 0 or omit if you don't want immigrants
  num_immigrants: 5

  # Parent selection strategy: 'weighted' or 'uniform'
  # 'weighted' uses weights from manifest (if available)
  # 'uniform' treats all parents equally
  parent_selection: "weighted"

# GA configuration reference
ga_config:
  config_path: "ga_ext/ga_ext_config.yaml"
  # This file controls crossover strategy, mutation probabilities, repair params

# ============================================================================
# Parent Manifest Format (if using parents_manifest)
# ============================================================================
# Create a CSV file with the following format:
#
#   csv_path,score,weight
#   ga_output/variants/variant_003.csv,0.89,1.0
#   ga_output/variants/variant_007.csv,0.92,2.0
#   output/placement_final.csv,0.85,0.5
#
# - csv_path: Path to parent layout CSV (relative or absolute)
# - score: External fitness score (optional, for your reference)
# - weight: Selection probability (higher = more likely to be chosen as parent)
#
# The weights don't need to sum to 1.0; they're relative probabilities.

# ============================================================================
# Expected Output
# ============================================================================
# After running, you will find in ga_output/generation_001/:
#   - child_000.csv, child_001.csv, ... child_019.csv (20 children)
#   - immigrant_000.csv, immigrant_001.csv, ... immigrant_004.csv (5 immigrants)
#   - lineage.csv (full provenance for all individuals)
#
# Next steps:
#   1. Evaluate all layouts with your external evaluator
#   2. Create new parent manifest from best performers
#   3. Generate next generation (generation_002)
