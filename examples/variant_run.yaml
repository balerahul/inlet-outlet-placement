# Variant Mode Run Configuration
# =================================
# Generate mutated variants from a single parent layout.
#
# This mode is useful for:
# - Exploring local variations of a known good layout
# - Testing sensitivity to mutations
# - Creating diverse alternatives for evaluation
#
# Usage:
#   python3 ga_cli.py examples/variant_run.yaml

mode: "variant"

# Input: Single parent layout
input:
  parent_csv: "output/placement_final.csv"
  # The parent CSV must exist and contain valid placement data
  # Generate one with: python3 main.py

# Output configuration
output:
  output_root: "ga_output/variants"
  # If this directory exists, set overwrite to true
  overwrite: true

# Generation parameters
generation:
  # Number of variants to generate from the parent
  num_variants: 10
  # Each variant will have mutation applied (no crossover)

# GA configuration reference
ga_config:
  config_path: "ga_ext/ga_ext_config.yaml"
  # This file controls mutation probabilities, crossover strategy, repair params

# ============================================================================
# Expected Output
# ============================================================================
# After running, you will find in ga_output/variants/:
#   - variant_000.csv, variant_001.csv, ... variant_009.csv
#   - lineage.csv (provenance information for all variants)
#
# Next steps:
#   1. Evaluate all variants with your external evaluator (CFD, ML, etc.)
#   2. Select best performers and create a parent manifest
#   3. Use offspring mode to generate next generation
